---
import type { CollectionEntry } from 'astro:content'
import type { Page } from 'astro'

import ListPostCover from '@/components/ListPostCover.astro'
import Link from '../components/Link.astro'
import Pagination from '../components/Pagination.astro'
import RootLayout from './RootLayout.astro'
 import { useTranslations } from '@/i18n'

interface Props {
  title: string
  description: string
  titleTemplate?: string
  page: Page<CollectionEntry<'blog'>>
  robots?: string
}

const t = useTranslations()

const { title, description, page, robots, titleTemplate } = Astro.props
const hasDefaultSlot = Astro.slots.has('default')
---

<RootLayout {title} {description} {robots} {titleTemplate}>
  <div>
    <div class="space-y-2 pb-8 sm:pb-12 md:pb-20 pt-6 md:space-y-5">
      <h1
        class="text-3xl font-extrabold leading-9 tracking-tight text-gray-900 dark:text-primary-100 sm:text-4xl sm:leading-10 md:text-6xl md:leading-14"
      >
        {title}
      </h1>
      {
        hasDefaultSlot && (
          <div class="prose dark:prose-invert py-4">
            <slot />
          </div>
        )
      }
    </div>
    <ul class="divide-y divide-gray-300 dark:divide-gray-600">
      {!page.data.length && t('pages.home.noPosts')}
      {
        page.data.map((post) => {
          const {
            id,
            data: { title, description },
          } = post
          return (
          <li class="py-12">
              <article class="space-y-2 xl:grid xl:grid-cols-4 space-x-4 xl:space-y-0 xl:items-stretch">
                <ListPostCover {post} class="space-y-5 xl:col-span-1" />
                <div class="space-y-3 xl:col-span-3">
                  <div>
                    <h2 class="text-2xl font-bold leading-8 tracking-tight">
                      <Link
                        href={`/posts/${id}`}
                        class="text-gray-900 dark:text-primary-100"
                      >
                        {title}
                      </Link>
                    </h2>
                    <!--<div class="flex flex-wrap">
                      {tags.map(({ id }) => (
                        <Tag id={id} />
                      ))}
                    </div>-->
                  </div>
                  <div class="prose max-w-none text-gray-500 dark:text-gray-300">
                    {description}
                  </div>
                  <div class="text-base font-medium leading-6">
                      <Link
                        href={`/posts/${post.id}`}
                        class="themed-link"
                        aria-label={t('pages.home.readMoreAbout', { title })}
                      >
                        {t('pages.home.readMore')} &rarr;
                      </Link>
                    </div>
               </div>
              </article>
            </li>
          )
        })
      }
    </ul>
  </div>
  {(page.url.next || page.url.prev) && <Pagination page={page} />}
</RootLayout>
