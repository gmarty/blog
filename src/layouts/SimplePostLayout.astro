---
import SectionContainer from '../components/SectionContainer.astro'
import PageTitle from '../components/PageTitle.astro'
import Link from '../components/Link.astro'
import RootLayout from './RootLayout.astro'
import { type CollectionEntry, getEntries } from 'astro:content'
import { render } from 'astro:content'
import FormattedDate from '../components/FormattedDate.astro'
import ScrollTopAndComments from '@/solid/ScrollTopAndComments.tsx'
import PostCover from '../components/PostCover.astro'
import DetailsSummary from '../components/DetailsSummary.astro'
import SocialShareButtons from '../components/social-icons/SocialShareButtons.astro'
import Comments from '../components/Comments.astro'
import { sortBlogPosts } from '@/functions'
import { POST_METADATA } from '@/consts'
import { useTranslations } from '@/i18n'

const t = useTranslations()

interface Props {
  post: CollectionEntry<'blog'>
  next?: CollectionEntry<'blog'>
  prev?: CollectionEntry<'blog'>
}

const { post, next, prev } = Astro.props as Props
const authors: CollectionEntry<'authors'>[] = await getEntries(
  post.data.authors
)
const tags: CollectionEntry<'tags'>[] = await getEntries(post.data.tags)
const related: CollectionEntry<'blog'>[] = await getEntries(
  post.data.related
).then(sortBlogPosts)

const articleOgDetails = {
  publishedTime: post.data.date,
  modifiedTime: post.data.lastmod,
  authors: authors.map(({ data }) => data.name),
  tags: tags.map(({ data }) => data.name),
  cover: post.data.cover,
}

const { Content, headings } = await render(post)
---

<RootLayout
  title={post.data.title}
  description={post.data.description}
  article={articleOgDetails}
>
  <script>
    import '@justinribeiro/lite-youtube'
  </script>
  <SectionContainer>
    <ScrollTopAndComments client:only="solid-js" />
    <article>
      <header>
        <div class="space-y-1 pb-10 text-center dark:border-gray-600">
          <dl>
            <dt class="sr-only">{t('layouts.postLayout.publishedOn')}</dt>
            <dd
              class="text-base font-medium leading-6 text-gray-500 dark:text-gray-300"
            >
              <FormattedDate date={post.data.date} />
            </dd>
          </dl>
          <PageTitle>{post.data.title}</PageTitle>
        </div>
        {
          POST_METADATA.showCover && post.data.cover && (
            <div class="space-y-1 pb-10 text-center">
              <PostCover {post} />
            </div>
          )
        }
        {
          POST_METADATA.showSummary && (
            <div class="pb-0 text-center text-gray-900 dark:text-gray-100">
              <p>{post.data.description}</p>
            </div>
          )
        }
      </header>
      <div
        class="grid-rows-[auto_1fr] divide-y divide-gray-300 dark:divide-gray-600 pb-8 xl:divide-y-0"
      >
        {
          post.data.draft && (
            <div class="bg-yellow-100 dark:bg-yellow-900 border-yellow-400 dark:border-yellow-600 border-l-4 p-4 mt-10">
              <p class="text-yellow-700 dark:text-yellow-300">
                {t('layouts.postLayout.draftMessage')}
              </p>
            </div>
          )
        }
        {
          ['top', 'both'].includes(POST_METADATA.showShareButtons) ? (
            <SocialShareButtons
              title={post.data.title}
              description={post.data.description}
              class="mt-4"
            />
          ) : null
        }
        {
          POST_METADATA.showTableOfContents && headings.length > 0 && (
            <DetailsSummary
              class="border border-gray-300 dark:border-gray-600 rounded mt-4 max-w-none"
              title={t('layouts.postLayout.tableOfContents')}
            >
              <ul class="space-y-2 list-none mt-0 ps-0">
                {headings.map(({ slug, text, depth }) => (
                  <li
                    class:list={{
                      'ml-0': depth === 2,
                      'ml-4': depth === 3,
                      'ml-8': depth === 4,
                      'ml-12': depth === 5,
                      'ml-16': depth === 6,
                    }}
                  >
                    <Link href={`#${slug}`} class="no-underline">
                      {text}
                    </Link>
                  </li>
                ))}
              </ul>
            </DetailsSummary>
          )
        }
        <div
          class="divide-y divide-gray-300 dark:divide-gray-600 xl:col-span-3 xl:row-span-2 xl:pb-0"
        >
          <div class="prose max-w-none pb-8 pt-10 dark:prose-invert">
            <slot />
            <Content />
          </div>
        </div>
        {
          ['bottom', 'both'].includes(POST_METADATA.showShareButtons) ? (
            <SocialShareButtons
              title={post.data.title}
              description={post.data.description}
            />
          ) : null
        }
        {POST_METADATA.showComments && <Comments />}
        <footer>
          <div
            class="flex flex-col text-sm font-medium sm:flex-row sm:justify-between sm:text-base"
          >
            {
              prev && (
                <div class="pt-4 xl:pt-8">
                  <Link
                    href={`/posts/${prev.id}`}
                    class="themed-link"
                    aria-label={t('layouts.postLayout.nextPost', {
                      title: prev.data.title,
                    })}
                  >
                    &larr; {prev.data.title}
                  </Link>
                </div>
              )
            }
            {
              next && (
                <div class="pt-4 xl:pt-8">
                  <Link
                    href={`/posts/${next.id}`}
                    class="themed-link"
                    aria-label={t('layouts.postLayout.previousPost', {
                      title: next.data.title,
                    })}
                  >
                    {next.data.title} &rarr;
                  </Link>
                </div>
              )
            }
            {
              POST_METADATA.showRelatedPosts && related.length > 0 && (
                <div class="py-4 xl:pb-8">
                  <h2 class="text-xs tracking-wide text-gray-500 dark:text-gray-300">
                    {t('layouts.postLayout.relatedPosts')}
                  </h2>
                  <ul class="flex flex-wrap gap-2 xl:space-x-0 xl:space-y-0">
                    {related.map((post) => (
                      <li class="themed-link">
                        <Link href={`/posts/${post.id}`}>
                          {post.data.title}
                        </Link>
                      </li>
                    ))}
                  </ul>
                </div>
              )
            }
          </div>
        </footer>
      </div>
    </article>
  </SectionContainer>
</RootLayout>
