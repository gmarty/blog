---
import { Image } from 'astro:assets'
import SectionContainer from '../components/SectionContainer.astro'
import PageTitle from '../components/PageTitle.astro'
import Link from '../components/Link.astro'
import RootLayout from './RootLayout.astro'
import { type CollectionEntry, getEntries } from 'astro:content'
import FormattedDate from '../components/FormattedDate.astro'
// import Tag from '../components/Tag.astro'
import ScrollTopAndComments from '@/solid/ScrollTopAndComments.tsx'
import PostCover from '../components/PostCover.astro'
import DetailsSummary from '../components/DetailsSummary.astro'
import SocialShareButtons from '../components/social-icons/SocialShareButtons.astro'
import Comments from '../components/Comments.astro'
import { POST_METADATA } from '@/consts'
import { useTranslations } from '@/i18n'

const t = useTranslations()

interface Props {
  post: CollectionEntry<'blog'>
  next?: CollectionEntry<'blog'>
  prev?: CollectionEntry<'blog'>
}

const { post, next, prev } = Astro.props as Props
const authors: CollectionEntry<'authors'>[] = await getEntries(
  post.data.authors
)
const tags: CollectionEntry<'tags'>[] = await getEntries(post.data.tags)
const related: CollectionEntry<'blog'>[] = await getEntries(post.data.related)

const articleOgDetails = {
  publishedTime: post.data.date,
  modifiedTime: post.data.lastmod,
  authors: authors.map(({ data }) => data.name),
  tags: tags.map(({ data }) => data.name),
  cover: post.data.cover,
}

const { Content, headings } = await post.render()
---

<RootLayout
  title={post.data.title}
  description={post.data.description}
  article={articleOgDetails}
>
  <script>
    import '@justinribeiro/lite-youtube'
  </script>
  <SectionContainer>
    <ScrollTopAndComments client:only="solid-js" />
    <article>
      <div class="xl:divide-y xl:divide-gray-300 xl:dark:divide-gray-600">
        <header class="pt-6 xl:pb-6">
          <div class="space-y-1 text-center pb-4">
            <dl class="space-y-10">
              <div>
                <dt class="sr-only">{t('layouts.postLayout.publishedOn')}</dt>
                <dd
                  class="text-base font-medium leading-6 text-gray-500 dark:text-gray-300"
                >
                  <FormattedDate date={post.data.date} />
                </dd>
              </div>
            </dl>
            <PageTitle>{post.data.title}</PageTitle>
          </div>
          {
            POST_METADATA.showCover && post.data.cover && (
              <div class="space-y-1 pb-10 text-center dark:border-gray-700">
                <PostCover {post} />
              </div>
            )
          }
          {
            POST_METADATA.showSummary && (
              <div class="pb-0 text-center text-gray-900 dark:text-gray-100">
                <p>{post.data.description}</p>
              </div>
            )
          }
        </header>
        <div
          class="grid-rows-[auto_1fr] divide-y divide-gray-300 dark:divide-gray-600 pb-8 xl:grid xl:grid-cols-4 xl:gap-x-6 xl:divide-y-0"
        >
          <dl
            class="pb-10 pt-6 xl:border-b xl:border-gray-200 xl:pt-11 xl:dark:border-gray-700"
          >
            <dt class="sr-only">{t('layouts.postLayout.authors')}</dt>
            <dd>
              <ul
                class="flex flex-wrap justify-center items-center gap-4 sm:space-x-12 xl:block xl:space-x-0 xl:space-y-8"
              >
                <!--TODO: Add support for multiple authors-->
                {
                  authors.map(({ data }) => (
                    <>
                      <li class="flex items-center space-x-2">
                        {data.avatar && (
                          <Image
                            src={data.avatar}
                            width={38}
                            height={38}
                            alt={data.name}
                            loading="eager"
                            class="h-10 w-10 rounded-full"
                            format="webp"
                          />
                        )}
                        <dl class="whitespace-nowrap text-sm font-medium leading-5">
                          <dt class="sr-only">
                            {t('layouts.postLayout.authorName')}
                          </dt>
                          <dd class="text-gray-900 dark:text-gray-100">
                            {data.name}
                          </dd>
                        </dl>
                      </li>
                      <li class="text-gray-500 dark:text-gray-300">
                        {data.occupation}
                        <br />
                        {data.company}
                      </li>
                    </>
                  ))
                }
              </ul>
            </dd>
          </dl>
          <div class="xl:col-span-3 xl:row-span-2 xl:pb-0">
            {
              post.data.draft && (
                <div class="bg-yellow-100 dark:bg-yellow-900 border-yellow-400 dark:border-yellow-600 border-l-4 p-4 mt-10">
                  <p class="text-yellow-700 dark:text-yellow-300">
                    {t('layouts.postLayout.draftMessage')}
                  </p>
                </div>
              )
            }
            {
              ['top', 'both'].includes(POST_METADATA.showShareButtons) ? (
                <SocialShareButtons
                  title={post.data.title}
                  description={post.data.description}
                  class="mt-4"
                />
              ) : null
            }
            {
              POST_METADATA.showTableOfContents && headings.length > 0 && (
                <DetailsSummary
                  class="border border-gray-100 dark:border-gray-600 rounded mt-4 max-w-none"
                  title={t('layouts.postLayout.tableOfContents')}
                >
                  <ul class="space-y-2 list-none mt-0 ps-0">
                    {headings.map(({ slug, text, depth }) => (
                      <li
                        class:list={{
                          'ml-0': depth === 2,
                          'ml-4': depth === 3,
                          'ml-8': depth === 4,
                          'ml-12': depth === 5,
                          'ml-16': depth === 6,
                        }}
                      >
                        <Link href={`#${slug}`} class="no-underline">
                          {text}
                        </Link>
                      </li>
                    ))}
                  </ul>
                </DetailsSummary>
              )
            }

            <div class="prose max-w-none pb-8 pt-10 dark:prose-invert">
              <slot />
              <Content />
            </div>
            {
              ['bottom', 'both'].includes(POST_METADATA.showShareButtons) ? (
                <SocialShareButtons
                  title={post.data.title}
                  description={post.data.description}
                />
              ) : null
            }
            {POST_METADATA.showComments && <Comments />}
          </div>
          <footer>
            <div
              class="divide-gray-300 dark:divide-gray-600 text-sm font-medium leading-5 xl:col-start-1 xl:row-start-2 xl:divide-y"
            >
              <!--{
                tags && (
                  <div class="py-4 xl:py-8">
                    <h2 class="text-xs tracking-wide text-gray-500 dark:text-gray-300">
                      {t('layouts.postLayout.tags')}
                    </h2>
                    <div class="flex flex-wrap">
                      {tags.map((tag) => (
                        <Tag tag={tag} />
                      ))}
                    </div>
                  </div>
                )
              }-->
              {
                (next || prev) && (
                  <div class="flex justify-between py-4 xl:block xl:space-y-8 xl:py-8">
                    {prev && (
                      <div>
                        <h2 class="text-xs tracking-wide text-gray-500 dark:text-gray-300">
                          {t('layouts.postLayout.nextPost')}
                        </h2>
                        <div class="themed-link">
                          <Link href={`/posts/${prev.slug}`}>
                            {prev.data.title}
                          </Link>
                        </div>
                      </div>
                    )}
                    {next && (
                      <div>
                        <h2 class="text-xs tracking-wide text-gray-500 dark:text-gray-300">
                          {t('layouts.postLayout.previousPost')}
                        </h2>
                        <div class="themed-link">
                          <Link href={`/posts/${next.slug}`}>
                            {next.data.title}
                          </Link>
                        </div>
                      </div>
                    )}
                  </div>
                )
              }
              {
                POST_METADATA.showRelatedPosts && related.length > 0 && (
                  <div class="py-4 xl:pb-8">
                    <h2 class="text-xs tracking-wide text-gray-500 dark:text-gray-300">
                      {t('layouts.postLayout.relatedPosts')}
                    </h2>
                    <ul class="flex flex-wrap gap-2 xl:space-x-0 xl:space-y-0">
                      {related.map((post) => (
                        <li class="themed-link">
                          <Link href={`/posts/${post.slug}`}>
                            {post.data.title}
                          </Link>
                        </li>
                      ))}
                    </ul>
                  </div>
                )
              }
            </div>
            <div class="pt-4 xl:pt-8">
              <Link
                href="/"
                class="themed-link"
                aria-label={t('layouts.postLayout.backToBlog')}
              >
                &larr; {t('layouts.postLayout.backToBlog')}
              </Link>
            </div>
          </footer>
        </div>
      </div>
    </article>
  </SectionContainer>
</RootLayout>
