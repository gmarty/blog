---
import { type CollectionEntry, getCollection } from 'astro:content'

import RootLayout from '@/layouts/RootLayout.astro'
import Tag from '@/components/Tag.astro'
import Link from '@/components/Link.astro'
import { excludeDrafts, sortBlogPosts } from '@/functions'
import { useTranslations } from '@/i18n'

const t = useTranslations()

const tags = await getCollection('tags')
const posts = await getCollection('blog', excludeDrafts).then(sortBlogPosts)

const tagCount = (id: CollectionEntry<'tags'>['id']) => {
  if (!posts) return 0
  return posts.filter((post) => post.data.tags.some((tag) => tag.id === id))
    .length
}
---

<RootLayout
  title={t('pages.tags.title')}
  description={t('pages.tags.description')}
>
  <div
    class="flex flex-col items-start justify-start divide-y divide-gray-300 dark:divide-gray-600 md:mt-24 md:flex-row md:items-center md:justify-center md:space-x-6 md:divide-y-0"
  >
    <div class="space-x-2 pb-8 pt-6 md:space-y-5">
      <h1
        class="text-3xl font-extrabold leading-9 tracking-tight text-gray-900 dark:text-gray-100 sm:text-4xl sm:leading-10 md:border-r-2 md:px-6 md:text-6xl md:leading-14"
      >
        {t('pages.tags.allTags')}
      </h1>
    </div>
    <div class="flex max-w-lg flex-wrap">
      {!tags.length && t('pages.tags.noTags')}
      {
        tags.map((tag) => {
          return (
            <div class="mb-2 mr-5 mt-2">
              <Tag tag={tag} />
              <Link
                href={`/tags/${tag.id}`}
                class="-ml-2 text-sm font-semibold text-gray-500 dark:text-gray-300"
                aria-label={t('pages.tags.viewPosts', { tag: tag.data.name })}
              >
                {` (${tagCount(tag.id)})`}
              </Link>
            </div>
          )
        })
      }
    </div>
  </div>
</RootLayout>
