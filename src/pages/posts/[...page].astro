---
import type { Page, GetStaticPaths } from 'astro'

import { getCollection } from 'astro:content'
import Layout from '@/layouts/ListLayout.astro'
// import Layout from '@/layouts/ListWithTagsLayout.astro'
import { ITEMS_PER_PAGE } from '@/consts'
import { sortBlogPosts, excludeDrafts } from '@/functions'
import { useTranslations } from '@/i18n'

const t = useTranslations()

interface Props {
  page: Page
}

export const getStaticPaths = (async ({ paginate }) => {
  const posts = await getCollection('blog', excludeDrafts).then(sortBlogPosts)
  return paginate(posts, { pageSize: ITEMS_PER_PAGE })
}) satisfies GetStaticPaths

const { page } = Astro.props
let titleTemplate = ''
let robots

if (page.currentPage > 1) {
  titleTemplate = t('seo.pagination.page', { page: `${page.currentPage}` })
  // Ask search engines to not index paginated pages
  robots = 'noindex,follow'
}
---

<Layout
  title={t('pages.blog.title')}
  description={t('pages.blog.description')}
  {page}
  {robots}
  {titleTemplate}
/>
